{"version":3,"sources":["logo.svg","components/Header.jsx","components/Button.jsx","components/Sidebar.jsx","components/Label.jsx","components/Swatch.jsx","components/View.jsx","components/Content.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","searchQuery","setSearchQuery","onChange","className","src","logo","alt","type","placeholder","Button","valueName","onClick","value","Sidebar","onClickRandom","onClickGroup","map","groupName","Label","label","id","text","htmlFor","style","Swatch","swatch","backgroundColor","View","swatches","labels","navRow","filter","item","width","Content","onClickDetail","App","allColors","storage","get","colors","i","color","Math","random","toString","padStart","push","set","generateColors","useState","setColors","currPageNum","pageSize","numPages","ceil","length","slice","setSwatches","fontSize","lineHeight","marginTop","padding","setLabels","pagination","previousLabel","nextLabel","pageCount","onPageChange","selected","newColors","newSwatches","forEach","newLabels","containerClassName","previousLinkClassName","nextLinkClassName","activeClassName","disabledClassName","pageRangeDisplayed","setNavRow","e","target","height","borderColor","detailLabel","clearButton","page","includes","x","floor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bada6eb0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.5a22712c.svg\";","import logo from '../logo.svg';\n\nconst Header = ({searchQuery, setSearchQuery, onChange}) => {\n    return (\n        <div className='row header'>\n            <div className='col-9'>\n                <img src={logo} className='logo' alt='logo' />\n            </div>\n            <div className='col-3'>\n                <input\n                    type='text'\n                    className='search_bar'\n                    placeholder='Search'\n                    onChange={onChange}>\n                </input>\n            </div>\n        </div>\n    );\n}\n\nexport default Header\n","const Button = ({className, valueName, onClick}) => {\n    return (\n        <input\n            type='button'\n            className={className}\n            value={valueName}\n            onClick={onClick}\n        />\n    );\n}\n\nexport default Button\n","import Button  from './Button'\n\nconst Sidebar = ({onClickRandom, onClickGroup}) => {\n    let groupList = ['Red','Orange','Yellow','Green','Blue','Purple','Brown','Gray'];\n\n    return (\n        <div className='col-3 sidebar'>\n            <Button\n                key='btnRandom'\n                className='random_btn'\n                valueName='Random Color'\n                onClick={onClickRandom}\n            />\n            {groupList.map((groupName) => (\n            <Button\n                key={'group' + groupName}\n                className='group_btn'\n                valueName={groupName}\n                onClick={onClickGroup}\n            />\n            ))}\n        </div>\n    );\n}\n\nexport default Sidebar\n","const Label = ({label}) => {\n    return (\n        <label\n            id={'label' + label.text}\n            htmlFor={label.text}\n            style={label.style}\n        >\n            {label.text}\n        </label>\n    );\n}\n\nexport default Label\n","import Label from './Label'\n\nconst Swatch = ({swatch, label, onClick}) => {\n    return (\n        <div\n            id={swatch.backgroundColor}\n            className='swatch'\n            style={swatch}\n            onClick={onClick}\n        >\n            <Label key={'label' + label.text} label={label} />\n        </div>\n    );\n}\n\nexport default Swatch\n","import Swatch from './Swatch'\n\nconst View = ({swatches, labels, navRow, onClick}) => {\n    return (\n        <div className='col-9 view'>\n            <div className='col-12 page'>\n                {swatches.map((swatch) => (\n                <Swatch\n                    key={'swatch' + swatch.backgroundColor + swatch.width}\n                    swatch={swatch}\n                    label={labels.filter(item => item.text === swatch.backgroundColor)[0]}\n                    onClick={onClick}\n                />\n                ))}\n            </div>\n            <div className='col-12 navrow'>\n                {navRow}\n            </div>\n        </div>\n    );\n}\n\nexport default View\n","import Sidebar from './Sidebar'\nimport View  from './View'\n\nconst Content = ({swatches, labels, navRow, onClickRandom, onClickGroup, onClickDetail}) => {\n    return (\n        <div className='row content'>\n            <Sidebar\n                onClickRandom={onClickRandom}\n                onClickGroup={onClickGroup}\n            />\n            <View\n                swatches={swatches}\n                labels={labels}\n                navRow={navRow}\n                onClick={onClickDetail}\n            />\n        </div>\n    );\n}\n\nexport default Content\n","import storage from 'local-storage'\nimport './App.css';\nimport {useState} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport Header  from './components/Header'\nimport Content from './components/Content'\nimport Button  from './components/Button'\n\n// TODO: bundle different funcitonality into separate respective functions/vars\nfunction App() {\n    let allColors = generateColors();\n    const [colors, setColors] = useState(allColors);\n    const [searchQuery, setSearchQuery] = useState('');\n\n    let currPageNum = 0;\n    let pageSize = 12;\n    let numPages = Math.ceil(colors.length / pageSize);\n\n    const [swatches, setSwatches] = useState(colors.slice(0,pageSize).map((item) => ({\n        backgroundColor: item.backgroundColor,\n        width: '220px'\n    })));\n\n    const [labels, setLabels] = useState(swatches.map((item) => ({\n        text: item.backgroundColor,\n        style: {\n            fontSize: '1.5rem',\n            lineHeight: '50px',\n            marginTop: '207px',\n            padding: '0rem 1.5rem'\n        }\n    })));\n\n    function onChangeSearch(e) {\n        setSearchQuery(e.target.value);\n        if (searchQuery !== '') {\n            setColors(allColors.filter(color => color.backgroundColor.includes(searchQuery)));\n        } else {\n            setColors(allColors);\n        }\n\n        setSwatches(colors.slice(0,pageSize).map((item) => ({\n            backgroundColor: item.backgroundColor,\n            width: '220px'\n        })));\n\n        setLabels(colors.map((item) => ({\n            text: item.backgroundColor,\n            style: {\n                fontSize: '1.5rem',\n                lineHeight: '50px',\n                marginTop: '207px',\n                padding: '0rem 1.5rem'\n            }\n        })));\n    }\n\n    function selectPage({selected}) {\n        currPageNum = selected;\n        let newColors = colors.slice(pageSize * currPageNum,\n                                     pageSize * (currPageNum + 1));\n        let newSwatches = [];\n        newColors.forEach((color) => newSwatches.push({\n            backgroundColor: color.backgroundColor,\n            width: '220px'\n        }));\n\n        let newLabels = [];\n        newColors.forEach((color) => newLabels.push({\n            text: color.backgroundColor,\n            style: {\n                fontSize: '1.5rem',\n                lineHeight: '50px',\n                marginTop: '207px',\n                padding: '0rem 1.5rem'\n            }\n        }));\n\n        setSwatches(newSwatches);\n        setLabels(newLabels);\n    }\n\n    const pagination = (\n        <ReactPaginate\n            previousLabel={'Previous'}\n            nextLabel={'Next'}\n            pageCount={numPages}\n            onPageChange={selectPage}\n            containerClassName={'pagination'}\n            previousLinkClassName={'paginationPrevious'}\n            nextLinkClassName={'paginationNext'}\n            activeClassName={'paginationActive'}\n            disabledClassName={'paginationDisabled'}\n            pageRangeDisplayed={numPages}\n        />\n    );\n\n    const [navRow, setNavRow] = useState(pagination);\n\n    function onClickDetail(e) {\n        let newSwatches = [];\n        newSwatches.push({\n            backgroundColor: e.target.id,\n            width: '100%',\n            height: '650px',\n            borderColor: 'black'\n        });\n\n        let restSwatches = swatches.filter(item => item.backgroundColor !== e.target.id);\n        restSwatches.forEach(item => newSwatches.push({\n            backgroundColor: item.backgroundColor,\n            width: '176px',\n            height: '176px'\n        }));\n\n        let newLabels = [];\n        let detailLabel = {\n            text: e.target.id,\n            style: {\n                fontSize: '4rem',\n                lineHeight: '150px',\n                height: '150px',\n                marginTop: '498px',\n                padding: '0rem 4.5rem'\n            }\n        };\n        newLabels.push(detailLabel);\n\n        let restLabels = labels.filter(item => item.text !== e.target.id);\n        restLabels.forEach(label => newLabels.push({\n            text: label.text,\n            style: {\n                lineHeight: '65px',\n                height: '65px',\n                marginTop: '110px',\n                padding: '0rem 1.0rem'\n            }\n        }));\n\n        setSwatches(newSwatches.slice(0,6));\n        setLabels(newLabels.slice(0,6));\n        setNavRow(clearButton);\n    }\n\n    function onClickClear(e) {\n        let newSwatches = [];\n        let page = colors.slice(pageSize * currPageNum,\n                                pageSize * (currPageNum + 1));\n        newSwatches = page.map((item) => ({\n            backgroundColor: item.backgroundColor,\n            width: '220px',\n            height: '258px'\n        }));\n\n        let newLabels = [];\n        newLabels = page.map((item) => ({\n            text: item.backgroundColor,\n            style: {\n                fontSize: '1.5rem',\n                lineHeight: '50px',\n                height: '50px',\n                width: '100%',\n                marginTop: '207px'\n            }\n        }));\n\n        setSwatches(newSwatches);\n        setLabels(newLabels);\n        setNavRow(pagination);\n    }\n\n    function onClickRandom(e) {\n        let x = Math.floor(Math.random() * swatches.length);\n        let randomSwatch = {\n            target: {\n                id: swatches[x].backgroundColor\n            }\n        };\n        onClickDetail(randomSwatch);\n    }\n\n    function onClickGroup(e) {\n        // TODO: to be implemented\n    }\n\n    const clearButton = (\n        <Button\n            key='btnClear'\n            className='clear_btn'\n            valueName='Clear'\n            onClick={onClickClear}\n        />\n    );\n\n    return (\n        <div className='container-fluid h-100'>\n            <Header\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n                onChange={onChangeSearch}\n            />\n            <Content\n                swatches={swatches}\n                labels={labels}\n                navRow={navRow}\n                onClickRandom={onClickRandom}\n                onClickGroup={onClickGroup}\n                onClickDetail={onClickDetail}\n            />\n        </div>\n    );\n}\n\nfunction generateColors() {\n    if (storage.get('colorList') === null) {\n        let colors = [];\n        for (let i = 0; i < 120; i++) {\n            let color = '#'+(Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0');\n            colors.push({backgroundColor: color});\n        }\n        storage.set('colorList', colors);\n    } else {\n        return storage.get('colorList');\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}